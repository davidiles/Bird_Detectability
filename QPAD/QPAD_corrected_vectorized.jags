
    model {
    
    # ------------------------------
    # Priors
    # ------------------------------
    
    phi ~ dunif(0,1)
    tau ~ dunif(0,2)
    
    # ------------------------------
    # Simulation
    # ------------------------------
    
    # For each simulated bird, probability it has generated at least one detectable cue by end of time interval
    for (i in 1:Nsim){
    
      # Simulate cueing for each bird in each time interval
      for (j in 1:ntint){
      
        # Expected number of cues produced during interval
        lambda[i,j] <- phi*tint_duration[j]*exp(-(sim_dist[i]/tau)^2)
        
        # Probability bird produces at least one detectable cue
        p[i,j] <- 1 - exp(-lambda[i,j])
        dc[i,j] ~ dbern(p[i,j]) # binary (was bird detected?)
      }
      
      # Ensure that each bird only gets detected once
      yy[i,1] <- dc[i,1]
      for (j in 1:(ntint-1)){
        mx[i,j] <- max(dc[i,1:j]) # Max detection up to this time bin
        yy[i,j+1] <- dc[i,j+1]*(1-mx[i,j]) # If bird was detected previously, set to zero (so we can sum yy in each distance/time bin)
      }
      
    }
    
    # Sum up first detections in each time and distance bin
    for (i in 1:nrint){
      for (j in 1:ntint){
        Ysim_matrix[i,j] <- sum(yy[r_from[i]:r_to[i],j])
      }
    }
    
    # Place counts in correct vectorized bins
    for (i in 1:n_bins_vectorized){
        Ysim_vectorized[i] <- Ysim_matrix[Y_rint_numeric[i],Y_tint_numeric[i]]
    }
      
    # -----------------------------------------------------
    # Use relative proportions for detectability modeling
    # -----------------------------------------------------
    
    Y_vectorized[1:n_bins_vectorized] ~ dmulti(Ysim_vectorized[],N_det)
    
  }
    

