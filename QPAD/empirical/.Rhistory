Y_rint_numeric <- factor(Y_vec$rint) %>% as.numeric()
Y_tint_numeric <- factor(Y_vec$tint) %>% as.numeric()
Y_vectorized <- Y_vec$Y
Y_vectorized[1] <- Y_vectorized[1] - 20
jags_data <- list(
pi = pi,
# Time bin information
tint = tint,
ntint = length(tint),
tint_duration = diff(c(0,tint)),
# Distance bin information
nrint = length(rint),
# Data augmentation
Nsim = nrow(sim_birds),
sim_dist = sim_birds$dist,
# Distance that each simulated bird belongs to
r_from = r_from,
r_to = r_to,
# Vectorized data
N_det = sum(Y_vectorized),
Y_vectorized = Y_vectorized,
n_bins_vectorized = length(Y_rint_numeric),
Y_rint_numeric = Y_rint_numeric,
Y_tint_numeric = Y_tint_numeric
)
# Fit model
out <- jags(data = jags_data,
model.file =  "QPAD_corrected_vectorized.jags",
parameters.to.save = c("phi","tau"),
n.chains = 3,
n.thin = 1,
n.iter = 5000,
n.burnin = 1000,
parallel = TRUE)
Nsim = 1000 # Choose large number so that *expected* cell probabilities are not affected by sampling variation
dim = 600     # landscape size (dim x dim landscape)
sim_birds <- data.frame(bird_id = 1:Nsim,
x = runif(Nsim,-dim/2,dim/2),
y = runif(Nsim,-dim/2,dim/2))
# Random distances to observer
sim_birds$dist <- sqrt(sim_birds$x^2 + sim_birds$y^2)
sim_birds$rint <- cut(sim_birds$dist,c(0,rint))
# Sort simulated sim_birds by distance
sim_birds <- sim_birds %>% arrange(dist)
# Group simulated birds into distance bins
sim_birds$rint <- cut(sim_birds$dist,c(0,rint))
sim_birds$rint_num <- sim_birds$rint %>% factor() %>% as.numeric()
# For each distance bin, store first and last bird in that bin
r_from <- r_to <- rint*NA
for (i in 1:length(rint)){
r_from[i] <- min(which(sim_birds$rint_num == i))
r_to[i] <- max(which(sim_birds$rint_num == i))
}
# Change to vector format (so dcat() can work in JAGS)
Y_vec <- reshape2::melt(Y) %>%
rename(rint = Var1, tint = Var2, Y = value)
Y_rint_numeric <- factor(Y_vec$rint) %>% as.numeric()
Y_tint_numeric <- factor(Y_vec$tint) %>% as.numeric()
Y_vectorized <- Y_vec$Y
Y_vectorized[1] <- Y_vectorized[1] - 20
jags_data <- list(
pi = pi,
# Time bin information
tint = tint,
ntint = length(tint),
tint_duration = diff(c(0,tint)),
# Distance bin information
nrint = length(rint),
# Data augmentation
Nsim = nrow(sim_birds),
sim_dist = sim_birds$dist,
# Distance that each simulated bird belongs to
r_from = r_from,
r_to = r_to,
# Vectorized data
N_det = sum(Y_vectorized),
Y_vectorized = Y_vectorized,
n_bins_vectorized = length(Y_rint_numeric),
Y_rint_numeric = Y_rint_numeric,
Y_tint_numeric = Y_tint_numeric
)
# Fit model
out <- jags(data = jags_data,
model.file =  "QPAD_corrected_vectorized.jags",
parameters.to.save = c("phi","tau"),
n.chains = 3,
n.thin = 1,
n.iter = 5000,
n.burnin = 1000,
parallel = TRUE)
out
file
plot(out$sims.list$phi ~ out$sims.list$tau)
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau))
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "dodgerblue")+
theme_bw()
tau_MLE
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
theme_bw()
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau")+
theme_bw()
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau")+
xlab("")+
theme_bw()
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(0,100))+
ggtitle("EDR")
?geom_violin
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "dodgerblue",
draw_quantiles = c(0.05,0.5,0.95))+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(0,100))+
ggtitle("EDR")
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "dodgerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "darkblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(0,100))+
ggtitle("EDR")
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(0,100))+
ggtitle("EDR")
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "lightblue",
draw_quantiles = c(0.05,0.5,0.95), col = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(0,100))+
ggtitle("EDR")
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(0,100))+
ggtitle("EDR")
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
ggtitle("EDR")
ggplot()+
geom_violin(aes(x = "", y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "dodgerblue")+
geom_point(aes(x = "", y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("EDR")
ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "dodgerblue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("EDR")
ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "dodgerblue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 5)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 5,hjust = 1)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("Tau / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$phi), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = phi_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = phi_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("phi / EDR")+
xlab("")+
theme_bw()+
scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("phi / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot
phiplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$phi), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = phi_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = phi_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("phi / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("phi / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot
tauplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("Tau / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("Tau / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$phi), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = phi_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = phi_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("phi / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("phi / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot
tauplot
compare_plot <- ggarrange(tauplot,phiplot,ncol = 2)
compare_plot
phiplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$phi), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = phi_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = phi_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("phi / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("phi / cue rate")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
tauplot
phiplot
compare_plot <- ggarrange(tauplot,phiplot,ncol = 2)
compare_plot
tauplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("tau / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("tau / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$phi), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = phi_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = phi_MLE, label = "QPAD"), col = "red", size = 5,hjust = 0)+
ylab("phi / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("phi / cue rate")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
tauplot
phiplot
compare_plot <- ggarrange(tauplot,phiplot,ncol = 2)
compare_plot
?ggarrange
compare_plot <- ggarrange(tauplot,phiplot,ncol = 2) %>%
annotate_figure(top = "OVEN")
compare_plot
compare_plot <- ggarrange(tauplot,phiplot,ncol = 2) %>%
annotate_figure(top = "OVEN\n\n")
compare_plot
png("OVEN.png", width = 6, height = 4, units = "in", res = 500)
print(compare_plot)
dev.off()
tauplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 2,hjust = 0)+
ylab("tau / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("tau / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$phi), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = phi_MLE), col = "red", size = 5)+
geom_text(aes(x = 1.1, y = phi_MLE, label = "QPAD"), col = "red", size = 2,hjust = 0)+
ylab("phi / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("phi / cue rate")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
compare_plot <- ggarrange(tauplot,phiplot,ncol = 2) %>%
annotate_figure(top = "OVEN\n\n")
compare_plot
png("OVEN.png", width = 6, height = 4, units = "in", res = 500)
print(compare_plot)
dev.off()
tauplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 3)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 2,hjust = 0)+
ylab("tau / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("tau / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$phi), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = phi_MLE), col = "red", size = 3)+
geom_text(aes(x = 1.1, y = phi_MLE, label = "QPAD"), col = "red", size = 2,hjust = 0)+
ylab("phi / EDR")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("phi / cue rate")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
compare_plot <- ggarrange(tauplot,phiplot,ncol = 2) %>%
annotate_figure(top = "OVEN\n\n")
compare_plot
png("OVEN.png", width = 6, height = 4, units = "in", res = 500)
print(compare_plot)
dev.off()
tauplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$tau), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = tau_MLE), col = "red", size = 3)+
geom_text(aes(x = 1.1, y = tau_MLE, label = "QPAD"), col = "red", size = 2,hjust = 0)+
ylab("tau")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("tau / EDR")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
phiplot = ggplot()+
geom_violin(aes(x = 1, y = out$sims.list$phi), fill = "cornflowerblue",
draw_quantiles = c(0.05,0.5,0.95), col = "blue")+
geom_point(aes(x = 1, y = phi_MLE), col = "red", size = 3)+
geom_text(aes(x = 1.1, y = phi_MLE, label = "QPAD"), col = "red", size = 2,hjust = 0)+
ylab("phi")+
xlab("")+
theme_bw()+
#scale_y_continuous(limits = c(50,100))+
scale_x_continuous(limits = c(0,2))+
ggtitle("phi / cue rate")+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
compare_plot <- ggarrange(tauplot,phiplot,ncol = 2) %>%
annotate_figure(top = "OVEN\n\n")
compare_plot
png("OVEN.png", width = 6, height = 4, units = "in", res = 500)
print(compare_plot)
dev.off()
out
plot(out$sims.list$phi ~ out$sims.list$tau)
plot(out$sims.list$phi ~ out$sims.list$tau, xlab = "tau", ylab = "phi")
