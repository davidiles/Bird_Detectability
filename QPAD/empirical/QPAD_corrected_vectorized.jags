
    model {
    
    # ------------------------------
    # Priors
    # ------------------------------
    
    phi ~ dunif(0,5)
    tau ~ dunif(0,500)
    
    # ------------------------------
    # Simulation
    # ------------------------------
    
    # For each simulated bird, probability it has generated at least one detectable cue by end of time interval
    for (i in 1:Nsim){
    
      # Simulate cueing for each bird in each time interval
      for (j in 1:ntint){
      
        # ************************************
        # Expected number of cues produced = phi*tint[j]
        # Expected number of detectable cues = lambda = phi*tint[j]*exp(-(sim_dist[i]/tau)^2)
        # Probability of getting zero detectable cues (under Poisson) = exp(-lambda)
        # Probability of getting at least 1 detectable cue = 1-exp(-lambda)
        # ************************************
        
        # Probability bird produces at least one detectable cue by end of interval (product of expected number of cues and probability each cue is detected)
        p[i,j] <- 1 - exp(-phi*tint[j]*exp(-(sim_dist[i]/tau)^2))
        
      }
    }
    
   # Sum up number of detected birds in each time and distance bin (this is sort of equivalent to the CDF)
    for (i in 1:nrint){
      for (j in 1:ntint){
        ET[i,j] <- sum(p[r_from[i]:r_to[i],j])
      }
    }
   
   # Difference within each distance bin to calculate cell probabilities
    for (i in 1:nrint){
      Ysim_matrix[i,1] <- ET[i,1]
      for (j in 2:ntint){
        Ysim_matrix[i,j] <- ET[i,j] - sum(ET[i,(j-1)])
      }
    } 
    
    # Place counts in correct vectorized bins
    for (i in 1:n_bins_vectorized){
        Ysim_vectorized[i] <- Ysim_matrix[Y_rint_numeric[i],Y_tint_numeric[i]]
      }
      
    # -----------------------------------------------------
    # Use relative proportions for detectability modeling
    # Note that JAGS automatically normalizes Ysim_vectorized (Ysim_vectorized/sum(Ysim_vectorized)) so that probabilities sum to 1
    # -----------------------------------------------------
    
    Y_vectorized[1:n_bins_vectorized] ~ dmulti(Ysim_vectorized[],N_det)
    
  }
    

